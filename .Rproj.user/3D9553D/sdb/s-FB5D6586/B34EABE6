{
    "collab_server" : "",
    "contents" : "\n# This is the server logic for a Shiny web application.\n# You can find out more about building applications with Shiny here:\n#\n# http://shiny.rstudio.com\n#\n\nlibrary(shiny)\nlibrary(reshape2)\nlibrary(ggplot2)\n\nshinyServer(function(input, output) {\n\n  output$triPlot <- renderPlot({\n\n    # generate bins based on input$bins from ui.R\n    n <- input$n\n    alpha <- input$alpha\n    beta <- input$beta\n    prob <- input$prob ## success probability\n    theta <- seq(0,1, length.out = n)\n    \n    ## Data\n    x <- sum(rbinom(n=n, size = 1, prob=prob)) ## number of successes\n    \n    ## Likelihood p(x|theta) with x ~ Bin(theta, alpha, beta)\n    likelihood <- dbinom(x, n, theta)\n    \n    ## Prior p(theta) based on Beta(theta, alpha, beta)\n    prior <- dbeta(theta, alpha, beta)\n    \n    ## Posterior Distribution p(theta|x)\n    posterior <- dbeta(theta, alpha+x, beta+n-x)\n    \n    data <- data.frame(Theta=theta, Prior=prior, Likelihood=likelihood, Posterior=posterior)\n    data.molten <- melt(data, id.vars = \"Theta\")\n    colnames(data.molten) <- c(\"Theta\", \"Function\", \"Density\")\n    \n    ggplot(data.molten, aes(x=Theta, y=Density)) +\n      geom_line(aes(colour=Function))\n  })\n\n})\n",
    "created" : 1494526384017.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "912374901",
    "id" : "B34EABE6",
    "lastKnownWriteTime" : 1495041476,
    "last_content_update" : 1495041476483,
    "path" : "~/workspace/R/BayesianParameterEstimation/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}